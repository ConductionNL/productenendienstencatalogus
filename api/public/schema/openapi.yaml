openapi: 3.0.2
info:
  title: 'Producten en Diensten Catalogus'
  version: V.0.1
  description: |
    API Details
    - Component: Producten en Diensten Catalogus
    - Reference: pdc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/productenendienstencatalogus) / [zip](https://github.com/ConductionNL/productenendienstencatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pdc-php) 
    - Datamodel: [postman](/schema/pdc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'This component provides a products and services catalogue that can be used by a order component in order to provide the products in the orders with better details. The design considerations are given in [DESIGN.md](https://github.com/ConductionNL/productenendienstencatalogus/blob/master/DESIGN.md) and [DESIGN-PDC.md](https://github.com/ConductionNL/productenendienstencatalogus/blob/master/DESIGN-PDC.md)'         
    
paths:
  /catalogues:
    get:
      tags:
        - Catalogue
      operationId: getCatalogueCollection
      summary: 'Retrieves the collection of Catalogue resources.'
      responses:
        200:
          description: 'Catalogue collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Catalogue:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogue-read'
      parameters:
        -
          name: sourceOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sourceOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Catalogue
      operationId: postCatalogueCollection
      summary: 'Creates a Catalogue resource.'
      responses:
        201:
          description: 'Catalogue resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
          links:
            GetCatalogueItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCatalogueItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /catalogues/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
        description: 'The new Catalogue resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/catalogues/{id}':
    get:
      tags:
        - Catalogue
      operationId: getCatalogueItem
      summary: 'Retrieves a Catalogue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Catalogue resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Catalogue
      operationId: deleteCatalogueItem
      summary: 'Removes the Catalogue resource.'
      responses:
        204:
          description: 'Catalogue resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Catalogue
      operationId: putCatalogueItem
      summary: 'Replaces the Catalogue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Catalogue resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
        description: 'The updated Catalogue resource'
    patch:
      tags:
        - Catalogue
      operationId: patchCatalogueItem
      summary: 'Updates the Catalogue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Catalogue resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogue-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogue-write'
        description: 'The updated Catalogue resource'
  /customer_types:
    get:
      tags:
        - CustomerType
      operationId: getCustomerTypeCollection
      summary: 'Retrieves the collection of CustomerType resources.'
      responses:
        200:
          description: 'CustomerType collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CustomerType:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerType-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - CustomerType
      operationId: postCustomerTypeCollection
      summary: 'Creates a CustomerType resource.'
      responses:
        201:
          description: 'CustomerType resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomerType:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
          links:
            GetCustomerTypeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCustomerTypeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /customer_types/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomerType:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
        description: 'The new CustomerType resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/customer_types/{id}':
    get:
      tags:
        - CustomerType
      operationId: getCustomerTypeItem
      summary: 'Retrieves a CustomerType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'CustomerType resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomerType:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - CustomerType
      operationId: deleteCustomerTypeItem
      summary: 'Removes the CustomerType resource.'
      responses:
        204:
          description: 'CustomerType resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - CustomerType
      operationId: putCustomerTypeItem
      summary: 'Replaces the CustomerType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'CustomerType resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomerType:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomerType:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
        description: 'The updated CustomerType resource'
    patch:
      tags:
        - CustomerType
      operationId: patchCustomerTypeItem
      summary: 'Updates the CustomerType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'CustomerType resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomerType:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomerType-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomerType:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomerType-write'
        description: 'The updated CustomerType resource'
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: sourceOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sourceOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    patch:
      tags:
        - Group
      operationId: patchGroupItem
      summary: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
  /offers:
    get:
      tags:
        - Offer
      operationId: getOfferCollection
      summary: 'Retrieves the collection of Offer resources.'
      responses:
        200:
          description: 'Offer collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Offer:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Offer
      operationId: postOfferCollection
      summary: 'Creates a Offer resource.'
      responses:
        201:
          description: 'Offer resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-read'
          links:
            GetOfferItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOfferItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /offers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Offer:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Offer-write'
        description: 'The new Offer resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/offers/{id}':
    get:
      tags:
        - Offer
      operationId: getOfferItem
      summary: 'Retrieves a Offer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Offer resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Offer
      operationId: deleteOfferItem
      summary: 'Removes the Offer resource.'
      responses:
        204:
          description: 'Offer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Offer
      operationId: putOfferItem
      summary: 'Replaces the Offer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Offer resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Offer:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Offer-write'
        description: 'The updated Offer resource'
    patch:
      tags:
        - Offer
      operationId: patchOfferItem
      summary: 'Updates the Offer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Offer resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Offer:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Offer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Offer-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Offer:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Offer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Offer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Offer-write'
        description: 'The updated Offer resource'
  /products:
    get:
      tags:
        - Product
      operationId: getProductCollection
      summary: 'Retrieves the collection of Product resources.'
      responses:
        200:
          description: 'Product collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Product:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
      parameters:
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sku]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: groups.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'groups.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: sku
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sku[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Product
      operationId: postProductCollection
      summary: 'Creates a Product resource.'
      responses:
        201:
          description: 'Product resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
          links:
            GetProductItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProductItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /products/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The new Product resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/products/{id}':
    get:
      tags:
        - Product
      operationId: getProductItem
      summary: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Product resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Product
      operationId: deleteProductItem
      summary: 'Removes the Product resource.'
      responses:
        204:
          description: 'Product resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Product
      operationId: putProductItem
      summary: 'Replaces the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
    patch:
      tags:
        - Product
      operationId: patchProductItem
      summary: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
  /property_values:
    get:
      tags:
        - PropertyValue
      operationId: getPropertyValueCollection
      summary: 'Retrieves the collection of PropertyValue resources.'
      responses:
        200:
          description: 'PropertyValue collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PropertyValue:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyValue-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - PropertyValue
      operationId: postPropertyValueCollection
      summary: 'Creates a PropertyValue resource.'
      responses:
        201:
          description: 'PropertyValue resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PropertyValue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
          links:
            GetPropertyValueItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPropertyValueItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /property_values/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PropertyValue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
        description: 'The new PropertyValue resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/property_values/{id}':
    get:
      tags:
        - PropertyValue
      operationId: getPropertyValueItem
      summary: 'Retrieves a PropertyValue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PropertyValue resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PropertyValue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - PropertyValue
      operationId: deletePropertyValueItem
      summary: 'Removes the PropertyValue resource.'
      responses:
        204:
          description: 'PropertyValue resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - PropertyValue
      operationId: putPropertyValueItem
      summary: 'Replaces the PropertyValue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PropertyValue resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PropertyValue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PropertyValue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
        description: 'The updated PropertyValue resource'
    patch:
      tags:
        - PropertyValue
      operationId: patchPropertyValueItem
      summary: 'Updates the PropertyValue resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PropertyValue resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PropertyValue:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PropertyValue-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PropertyValue:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PropertyValue-write'
        description: 'The updated PropertyValue resource'
  /suppliers:
    get:
      tags:
        - Supplier
      operationId: getSupplierCollection
      summary: 'Retrieves the collection of Supplier resources.'
      responses:
        200:
          description: 'Supplier collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Supplier:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Supplier
      operationId: postSupplierCollection
      summary: 'Creates a Supplier resource.'
      responses:
        201:
          description: 'Supplier resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
          links:
            GetSupplierItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSupplierItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /suppliers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The new Supplier resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/suppliers/{id}':
    get:
      tags:
        - Supplier
      operationId: getSupplierItem
      summary: 'Retrieves a Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Supplier resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Supplier
      operationId: deleteSupplierItem
      summary: 'Removes the Supplier resource.'
      responses:
        204:
          description: 'Supplier resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Supplier
      operationId: putSupplierItem
      summary: 'Replaces the Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Supplier resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The updated Supplier resource'
    patch:
      tags:
        - Supplier
      operationId: patchSupplierItem
      summary: 'Updates the Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Supplier resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The updated Supplier resource'
  /taxes:
    get:
      tags:
        - Tax
      operationId: getTaxCollection
      summary: 'Retrieves the collection of Tax resources.'
      responses:
        200:
          description: 'Tax collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tax:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Tax
      operationId: postTaxCollection
      summary: 'Creates a Tax resource.'
      responses:
        201:
          description: 'Tax resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
          links:
            GetTaxItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTaxItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /taxes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The new Tax resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/taxes/{id}':
    get:
      tags:
        - Tax
      operationId: getTaxItem
      summary: 'Retrieves a Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tax resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Tax
      operationId: deleteTaxItem
      summary: 'Removes the Tax resource.'
      responses:
        204:
          description: 'Tax resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Tax
      operationId: putTaxItem
      summary: 'Replaces the Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tax resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The updated Tax resource'
    patch:
      tags:
        - Tax
      operationId: patchTaxItem
      summary: 'Updates the Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tax resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The updated Tax resource'
components:
  schemas:
    Catalogue-read:
      type: object
      description: 'An entity representing a product catalogue.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Catalogue'
          type: string
        description:
          description: 'An short description of this Catalogue'
          type: string
        logo:
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that provides this catalogue'
          type: string
        groups:
          readOnly: true
          description: 'The groups that are a part of this catalogue'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - sourceOrganization
    Catalogue-write:
      type: object
      description: 'An entity representing a product catalogue.'
      required:
        - name
        - sourceOrganization
      properties:
        name:
          description: 'The name of this Catalogue'
          type: string
        description:
          description: 'An short description of this Catalogue'
          type: string
        logo:
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that provides this catalogue'
          type: string
    'Catalogue:jsonld-read':
      type: object
      description: 'An entity representing a product catalogue.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Catalogue'
          type: string
        description:
          description: 'An short description of this Catalogue'
          type: string
        logo:
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that provides this catalogue'
          type: string
        groups:
          readOnly: true
          description: 'The groups that are a part of this catalogue'
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - sourceOrganization
    'Catalogue:jsonld-write':
      type: object
      description: 'An entity representing a product catalogue.'
      required:
        - name
        - sourceOrganization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Catalogue'
          type: string
        description:
          description: 'An short description of this Catalogue'
          type: string
        logo:
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that provides this catalogue'
          type: string
    CustomerType-read:
      type: object
      description: 'An entity representing a type of customer.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this CustomerType'
          type: string
        description:
          description: 'The description for this CustomerType'
          type: string
        offers:
          description: 'The offers that this CustomerType is eligible for'
          type: array
          items:
            $ref: '#/components/schemas/Offer-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    CustomerType-write:
      type: object
      description: 'An entity representing a type of customer.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The name of this CustomerType'
          type: string
        description:
          description: 'The description for this CustomerType'
          type: string
        offers:
          description: 'The offers that this CustomerType is eligible for'
          type: array
          items:
            $ref: '#/components/schemas/Offer-write'
    'CustomerType:jsonld-read':
      type: object
      description: 'An entity representing a type of customer.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this CustomerType'
          type: string
        description:
          description: 'The description for this CustomerType'
          type: string
        offers:
          description: 'The offers that this CustomerType is eligible for'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - description
    'CustomerType:jsonld-write':
      type: object
      description: 'An entity representing a type of customer.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this CustomerType'
          type: string
        description:
          description: 'The description for this CustomerType'
          type: string
        offers:
          description: 'The offers that this CustomerType is eligible for'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-write'
    Group-read:
      type: object
      description: 'An entity representing a product group.'
      properties:
        id:
          readOnly: true
          description: 'The Uuid identifier of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        icon:
          description: 'The icon of this property'
          type: string
        name:
          description: 'The name of this product group'
          type: string
        description:
          readOnly: true
          description: 'An short description of this product group'
          type: string
        logo:
          readOnly: true
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        sourceOrganization:
          description: 'The RSIN of the organization that owns this group'
          type: string
        catalogue:
          description: 'The Catalogue that this product group belongs to'
          $ref: '#/components/schemas/Catalogue-read'
        children:
          description: 'The children of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        parent:
          description: 'the parent of this group'
          $ref: '#/components/schemas/Group-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - sourceOrganization
    Group-write:
      type: object
      description: 'An entity representing a product group.'
      properties:
        icon:
          description: 'The icon of this property'
          type: string
        name:
          description: 'The name of this product group'
          type: string
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
        sourceOrganization:
          description: 'The RSIN of the organization that owns this group'
          type: string
        catalogue:
          description: 'The Catalogue that this product group belongs to'
          $ref: '#/components/schemas/Catalogue-write'
        children:
          description: 'The children of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
        parent:
          description: 'the parent of this group'
          $ref: '#/components/schemas/Group-write'
      required:
        - name
        - sourceOrganization
    'Group:jsonld-read':
      type: object
      description: 'An entity representing a product group.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The Uuid identifier of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        icon:
          description: 'The icon of this property'
          type: string
        name:
          description: 'The name of this product group'
          type: string
        description:
          readOnly: true
          description: 'An short description of this product group'
          type: string
        logo:
          readOnly: true
          description: 'The logo for this component'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        sourceOrganization:
          description: 'The RSIN of the organization that owns this group'
          type: string
        catalogue:
          description: 'The Catalogue that this product group belongs to'
          $ref: '#/components/schemas/Catalogue:jsonld-read'
        children:
          description: 'The children of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        parent:
          description: 'the parent of this group'
          $ref: '#/components/schemas/Group:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - sourceOrganization
    'Group:jsonld-write':
      type: object
      description: 'An entity representing a product group.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        icon:
          description: 'The icon of this property'
          type: string
        name:
          description: 'The name of this product group'
          type: string
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
        sourceOrganization:
          description: 'The RSIN of the organization that owns this group'
          type: string
        catalogue:
          description: 'The Catalogue that this product group belongs to'
          $ref: '#/components/schemas/Catalogue:jsonld-write'
        children:
          description: 'The children of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-write'
        parent:
          description: 'the parent of this group'
          $ref: '#/components/schemas/Group:jsonld-write'
      required:
        - name
        - sourceOrganization
    Offer-read:
      type: object
      description: 'An entity representing an offer.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this offer'
          type: string
        description:
          description: 'An short description of this offer'
          type: string
        price:
          description: |
            The price of this product
            
            @example 50.00
          type: string
        priceCurrency:
          description: |
            The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
            
            @example EUR
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        offeredBy:
          description: 'The uri for the organisation that offers this offer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        availabilityEnds:
          description: 'the date this offer ends'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        availabilityStarts:
          description: 'the date this offer has started'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-read'
        eligibleCustomerTypes:
          description: 'The customer types that are eligible for this offer'
          type: array
          items:
            $ref: '#/components/schemas/CustomerType-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        products:
          description: 'The products related to this offer'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        audience:
          description: 'The audience this product is intended for'
          type: string
      required:
        - name
        - price
        - offeredBy
        - availabilityEnds
        - availabilityStarts
        - products
        - audience
    Offer-write:
      type: object
      description: 'An entity representing an offer.'
      required:
        - name
        - price
        - offeredBy
        - availabilityEnds
        - availabilityStarts
        - products
        - audience
      properties:
        name:
          description: 'The name of this offer'
          type: string
        description:
          description: 'An short description of this offer'
          type: string
        price:
          description: |
            The price of this product
            
            @example 50.00
          type: string
        priceCurrency:
          description: |
            The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
            
            @example EUR
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        offeredBy:
          description: 'The uri for the organisation that offers this offer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        availabilityEnds:
          description: 'the date this offer ends'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        availabilityStarts:
          description: 'the date this offer has started'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-write'
        eligibleCustomerTypes:
          description: 'The customer types that are eligible for this offer'
          type: array
          items:
            $ref: '#/components/schemas/CustomerType-write'
        products:
          description: 'The products related to this offer'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
        audience:
          description: 'The audience this product is intended for'
          type: string
    'Offer:jsonld-read':
      type: object
      description: 'An entity representing an offer.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this offer'
          type: string
        description:
          description: 'An short description of this offer'
          type: string
        price:
          description: |
            The price of this product
            
            @example 50.00
          type: string
        priceCurrency:
          description: |
            The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
            
            @example EUR
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        offeredBy:
          description: 'The uri for the organisation that offers this offer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        availabilityEnds:
          description: 'the date this offer ends'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        availabilityStarts:
          description: 'the date this offer has started'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-read'
        eligibleCustomerTypes:
          description: 'The customer types that are eligible for this offer'
          type: array
          items:
            $ref: '#/components/schemas/CustomerType:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        products:
          description: 'The products related to this offer'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        audience:
          description: 'The audience this product is intended for'
          type: string
      required:
        - name
        - price
        - offeredBy
        - availabilityEnds
        - availabilityStarts
        - products
        - audience
    'Offer:jsonld-write':
      type: object
      description: 'An entity representing an offer.'
      required:
        - name
        - price
        - offeredBy
        - availabilityEnds
        - availabilityStarts
        - products
        - audience
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this offer'
          type: string
        description:
          description: 'An short description of this offer'
          type: string
        price:
          description: |
            The price of this product
            
            @example 50.00
          type: string
        priceCurrency:
          description: |
            The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
            
            @example EUR
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        offeredBy:
          description: 'The uri for the organisation that offers this offer'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        availabilityEnds:
          description: 'the date this offer ends'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        availabilityStarts:
          description: 'the date this offer has started'
          externalDocs:
            url: 'http://schema.org/Date'
          type: string
          format: date-time
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-write'
        eligibleCustomerTypes:
          description: 'The customer types that are eligible for this offer'
          type: array
          items:
            $ref: '#/components/schemas/CustomerType:jsonld-write'
        products:
          description: 'The products related to this offer'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
        audience:
          description: 'The audience this product is intended for'
          type: string
    Product-read:
      type: object
      description: 'An entity representing a product.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo of this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        movie:
          description: 'The movie for this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
          type: integer
        variations:
          readOnly: true
          description: 'The different variations that are available of this product'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        type:
          description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
          type: string
        groupedProducts:
          readOnly: true
          description: 'If the product type is a **set** this contains the products that are part of that set'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        catalogue:
          description: 'The Catalogue that this product belongs to'
          $ref: '#/components/schemas/Catalogue-read'
        offers:
          description: 'The offers that refer to this product'
          type: array
          items:
            $ref: '#/components/schemas/Offer-read'
        calendar:
          description: 'The uri referring to the calendar of this product.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiresAppointment:
          description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
          type: boolean
        documents:
          readOnly: true
          description: 'An array of URLs pointing to documents related to this product'
          type: array
          items:
            type: string
        images:
          readOnly: true
          description: 'An array of URLs pointing to images related to this product'
          type: array
          items:
            type: string
        externalDocs:
          readOnly: true
          description: 'An array of URLs pointing to external documents referred to from this product'
          type: array
          items:
            type: string
        audience:
          description: 'The audience this product is intended for'
          type: string
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        duration:
          description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
      required:
        - name
        - sourceOrganization
        - type
        - catalogue
        - requiresAppointment
        - audience
    Product-write:
      type: object
      description: 'An entity representing a product.'
      properties:
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo of this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        movie:
          description: 'The movie for this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
          type: integer
        parent:
          writeOnly: true
          description: 'The product that this product is a variation of'
          $ref: '#/components/schemas/Product-write'
        type:
          description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
          type: string
        sets:
          writeOnly: true
          description: 'The sets thats this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
        catalogue:
          description: 'The Catalogue that this product belongs to'
          $ref: '#/components/schemas/Catalogue-write'
        offers:
          description: 'The offers that refer to this product'
          type: array
          items:
            $ref: '#/components/schemas/Offer-write'
        calendar:
          description: 'The uri referring to the calendar of this product.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiresAppointment:
          description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
          type: boolean
        audience:
          description: 'The audience this product is intended for'
          type: string
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue-write'
        duration:
          description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
      required:
        - name
        - sourceOrganization
        - type
        - catalogue
        - requiresAppointment
        - audience
    'Product:jsonld-read':
      type: object
      description: 'An entity representing a product.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo of this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        movie:
          description: 'The movie for this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
          type: integer
        variations:
          readOnly: true
          description: 'The different variations that are available of this product'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        type:
          description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
          type: string
        groupedProducts:
          readOnly: true
          description: 'If the product type is a **set** this contains the products that are part of that set'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        catalogue:
          description: 'The Catalogue that this product belongs to'
          $ref: '#/components/schemas/Catalogue:jsonld-read'
        offers:
          description: 'The offers that refer to this product'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-read'
        calendar:
          description: 'The uri referring to the calendar of this product.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiresAppointment:
          description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
          type: boolean
        documents:
          readOnly: true
          description: 'An array of URLs pointing to documents related to this product'
          type: array
          items:
            type: string
        images:
          readOnly: true
          description: 'An array of URLs pointing to images related to this product'
          type: array
          items:
            type: string
        externalDocs:
          readOnly: true
          description: 'An array of URLs pointing to external documents referred to from this product'
          type: array
          items:
            type: string
        audience:
          description: 'The audience this product is intended for'
          type: string
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        duration:
          description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
      required:
        - name
        - sourceOrganization
        - type
        - catalogue
        - requiresAppointment
        - audience
    'Product:jsonld-write':
      type: object
      description: 'An entity representing a product.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo of this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        movie:
          description: 'The movie for this product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        sourceOrganization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-write'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxPercentage:
          description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
          type: integer
        parent:
          writeOnly: true
          description: 'The product that this product is a variation of'
          $ref: '#/components/schemas/Product:jsonld-write'
        type:
          description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
          type: string
        sets:
          writeOnly: true
          description: 'The sets thats this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
        catalogue:
          description: 'The Catalogue that this product belongs to'
          $ref: '#/components/schemas/Catalogue:jsonld-write'
        offers:
          description: 'The offers that refer to this product'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-write'
        calendar:
          description: 'The uri referring to the calendar of this product.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        requiresAppointment:
          description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
          type: boolean
        audience:
          description: 'The audience this product is intended for'
          type: string
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue:jsonld-write'
        duration:
          description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
          type: string
      required:
        - name
        - sourceOrganization
        - type
        - catalogue
        - requiresAppointment
        - audience
    PropertyValue-read:
      type: object
      description: 'An entity representing a product property.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          type: string
        description:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
    PropertyValue-write:
      type: object
      description: 'An entity representing a product property.'
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
    'PropertyValue:jsonld-read':
      type: object
      description: 'An entity representing a product property.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          type: string
        description:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
    'PropertyValue:jsonld-write':
      type: object
      description: 'An entity representing a product property.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product:jsonld-write'
    Supplier-read:
      type: object
      description: 'An entity representing a supplier of products.'
      properties:
        id:
          readOnly: true
          description: 'The Uuid identifier of this supplier'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Supplier'
          type: string
        kvk:
          description: 'The number under which the supplier is registered at the chamber of commerce'
          type: string
        logo:
          description: 'The logo for this supplier'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - kvk
    Supplier-write:
      type: object
      description: 'An entity representing a supplier of products.'
      required:
        - name
        - kvk
      properties:
        name:
          description: 'The name of this Supplier'
          type: string
        kvk:
          description: 'The number under which the supplier is registered at the chamber of commerce'
          type: string
        logo:
          description: 'The logo for this supplier'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    'Supplier:jsonld-read':
      type: object
      description: 'An entity representing a supplier of products.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The Uuid identifier of this supplier'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this Supplier'
          type: string
        kvk:
          description: 'The number under which the supplier is registered at the chamber of commerce'
          type: string
        logo:
          description: 'The logo for this supplier'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - kvk
    'Supplier:jsonld-write':
      type: object
      description: 'An entity representing a supplier of products.'
      required:
        - name
        - kvk
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Supplier'
          type: string
        kvk:
          description: 'The number under which the supplier is registered at the chamber of commerce'
          type: string
        logo:
          description: 'The logo for this supplier'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    Tax-read:
      type: object
      description: 'An entity representing an tax.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        offers:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Offer-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - price
        - percentage
    Tax-write:
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        offers:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Offer-write'
    'Tax:jsonld-read':
      type: object
      description: 'An entity representing an tax.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        offers:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - price
        - percentage
    'Tax:jsonld-write':
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        offers:
          description: 'The offers that use this tax'
          type: array
          items:
            $ref: '#/components/schemas/Offer:jsonld-write'
definitions:
  Catalogue-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Catalogue'
        type: string
        example: 'My Catalogue'
        maxLength: 255
      description:
        description: 'An short description of this Catalogue'
        type: string
        example: 'This is the best catalogue ever'
        maxLength: 2550
      logo:
        description: 'The logo for this component'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that provides this catalogue'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      groups:
        description: 'The groups that are a part of this catalogue'
        type: \ArrayCollection
    required:
      - name
      - sourceOrganization
  Catalogue-write:
    properties:
      name:
        description: 'The name of this Catalogue'
        type: string
        example: 'My Catalogue'
        maxLength: 255
      description:
        description: 'An short description of this Catalogue'
        type: string
        example: 'This is the best catalogue ever'
        maxLength: 2550
      logo:
        description: 'The logo for this component'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that provides this catalogue'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
    required:
      - name
      - sourceOrganization
  CustomerType-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this CustomerType'
        type: string
        example: 'My CustomerType'
        maxLength: 255
      description:
        description: 'The description for this CustomerType'
        type: string
        example: 'this is the best customertype ever'
        maxLength: 2550
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      offers:
        description: 'The offers that this CustomerType is eligible for'
        type: \ArrayCollection
    required:
      - name
      - description
  CustomerType-write:
    properties:
      name:
        description: 'The name of this CustomerType'
        type: string
        example: 'My CustomerType'
        maxLength: 255
      description:
        description: 'The description for this CustomerType'
        type: string
        example: 'this is the best customertype ever'
        maxLength: 2550
      offers:
        description: 'The offers that this CustomerType is eligible for'
        type: \ArrayCollection
    required:
      - name
      - description
  Group-read:
    properties:
      id:
        description: 'The Uuid identifier of this group'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 15
      name:
        description: 'The name of this product group'
        type: string
        example: 'My Group'
        maxLength: 255
      description:
        description: 'An short description of this product group'
        type: string
        example: 'This is the best group ever'
        maxLength: 2550
      logo:
        description: 'The logo for this component'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that owns this group'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      products:
        description: 'The groups that are a part of this product group'
        type: \ArrayCollection
      catalogue:
        description: 'The Catalogue that this product group belongs to'
        type: \Catalogue
      children:
        description: 'The children of this group'
        type: '\ArrayCollection|\Group[]'
      parent:
        description: 'the parent of this group'
        type: \Group
    required:
      - name
      - sourceOrganization
  Group-write:
    properties:
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 15
      name:
        description: 'The name of this product group'
        type: string
        example: 'My Group'
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that owns this group'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      products:
        description: 'The groups that are a part of this product group'
        type: \ArrayCollection
      catalogue:
        description: 'The Catalogue that this product group belongs to'
        type: \Catalogue
      children:
        description: 'The children of this group'
        type: '\ArrayCollection|\Group[]'
      parent:
        description: 'the parent of this group'
        type: \Group
    required:
      - name
      - sourceOrganization
  Offer-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this offer'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this offer'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: |
          The price of this product
          
          @example 50.00
        type: string
      priceCurrency:
        description: |
          The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
          
          @example EUR
        type: string
      offeredBy:
        description: 'The uri for the organisation that offers this offer'
        type: string
        example: '(http://example.org/example/1)'
        format: url
        maxLength: 255
      availabilityEnds:
        description: 'the date this offer ends'
        type: string
        example: '2020-02-23'
        format: date
      availabilityStarts:
        description: 'the date this offer has started'
        type: string
        example: '2020-02-23'
        format: date
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      audience:
        description: 'The audience this product is intended for'
        type: string
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
      eligibleCustomerTypes:
        description: 'The customer types that are eligible for this offer'
        type: \ArrayCollection
      products:
        description: 'The products related to this offer'
        type: \ArrayCollection
    required:
      - name
      - price
      - offeredBy
      - availabilityEnds
      - availabilityStarts
      - audience
      - products
  Offer-write:
    properties:
      name:
        description: 'The name of this offer'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this offer'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: |
          The price of this product
          
          @example 50.00
        type: string
      priceCurrency:
        description: |
          The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format
          
          @example EUR
        type: string
      offeredBy:
        description: 'The uri for the organisation that offers this offer'
        type: string
        example: '(http://example.org/example/1)'
        format: url
        maxLength: 255
      availabilityEnds:
        description: 'the date this offer ends'
        type: string
        example: '2020-02-23'
        format: date
      availabilityStarts:
        description: 'the date this offer has started'
        type: string
        example: '2020-02-23'
        format: date
      audience:
        description: 'The audience this product is intended for'
        type: string
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
      eligibleCustomerTypes:
        description: 'The customer types that are eligible for this offer'
        type: \ArrayCollection
      products:
        description: 'The products related to this offer'
        type: \ArrayCollection
    required:
      - name
      - price
      - offeredBy
      - availabilityEnds
      - availabilityStarts
      - audience
      - products
  Product-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      sku:
        description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
        type: string
        example: 6666-2019
      name:
        description: 'The name of this Product'
        type: string
        example: 'My product'
        maxLength: 255
      description:
        description: 'An short description of this Product'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      logo:
        description: 'The logo of this product'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      movie:
        description: 'The movie for this product'
        type: string
        example: 'https://www.youtube.com/embed/RkBZYoMnx5w'
        format: url
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      taxPercentage:
        description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      type:
        description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
        type: string
        example: simple
        maxLength: 15
      calendar:
        description: 'The uri referring to the calendar of this product.'
        type: string
        example: 'http://example.org/calendar/calendar'
        format: url
        maxLength: 255
      requiresAppointment:
        description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
        type: bool
        example: 'false'
      documents:
        description: 'An array of URLs pointing to documents related to this product'
        type: array
      images:
        description: 'An array of URLs pointing to images related to this product'
        type: array
      externalDocs:
        description: 'An array of URLs pointing to external documents referred to from this product'
        type: array
      audience:
        description: 'The audience this product is intended for'
        type: string
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      duration:
        description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      groups:
        description: 'The product groups that this product is a part of'
        type: \ArrayCollection
      variations:
        description: 'The different variations that are available of this product'
        type: \ArrayCollection
      groupedProducts:
        description: 'If the product type is a **set** this contains the products that are part of that set'
        type: \ArrayCollection
      catalogue:
        description: 'The Catalogue that this product belongs to'
        type: \Catalogue
      offers:
        description: 'The offers that refer to this product'
        type: \ArrayCollection
      additionalProperties: []
    required:
      - name
      - sourceOrganization
      - requiresAppointment
      - audience
      - catalogue
  Product-write:
    properties:
      sku:
        description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
        type: string
        example: 6666-2019
      name:
        description: 'The name of this Product'
        type: string
        example: 'My product'
        maxLength: 255
      description:
        description: 'An short description of this Product'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      logo:
        description: 'The logo of this product'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      movie:
        description: 'The movie for this product'
        type: string
        example: 'https://www.youtube.com/embed/RkBZYoMnx5w'
        format: url
        maxLength: 255
      sourceOrganization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      taxPercentage:
        description: 'The tax percentage for this product as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      type:
        description: 'The type of this product. **simple**, **set**, **virtual**, **external**, **ticket**, **variable**, **subscription**, **person**, **location**, **service**'
        type: string
        example: simple
        maxLength: 15
      calendar:
        description: 'The uri referring to the calendar of this product.'
        type: string
        example: 'http://example.org/calendar/calendar'
        format: url
        maxLength: 255
      requiresAppointment:
        description: 'If the product requires a physical appointment, for example to request travel documents or for the booking of hotel rooms'
        type: bool
        example: 'false'
      audience:
        description: 'The audience this product is intended for'
        type: string
      duration:
        description: 'The duration of this product, entered according to the [ISO 8601-standard](https://en.wikipedia.org/wiki/ISO_8601#Durations)'
        type: string
        example: PT10M
      groups:
        description: 'The product groups that this product is a part of'
        type: \ArrayCollection
      parent:
        description: 'The product that this product is a variation of'
        type: \Product
      sets:
        description: 'The sets thats this product is a part of'
        type: \ArrayCollection
      catalogue:
        description: 'The Catalogue that this product belongs to'
        type: \Catalogue
      offers:
        description: 'The offers that refer to this product'
        type: \ArrayCollection
      additionalProperties: []
    required:
      - name
      - sourceOrganization
      - requiresAppointment
      - audience
      - catalogue
  PropertyValue-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        maxLength: 255
      description: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      products: []
    required:
      - name
  PropertyValue-write:
    properties:
      name:
        maxLength: 255
      description: []
      products: []
    required:
      - name
  Supplier-read:
    properties:
      id:
        description: 'The Uuid identifier of this supplier'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Supplier'
        type: string
        example: 'My RequestType'
        maxLength: 255
      kvk:
        description: 'The number under which the supplier is registered at the chamber of commerce'
        type: string
        example: '30280353'
        maxLength: 255
      logo:
        description: 'The logo for this supplier'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
    required:
      - name
      - kvk
  Supplier-write:
    properties:
      name:
        description: 'The name of this Supplier'
        type: string
        example: 'My RequestType'
        maxLength: 255
      kvk:
        description: 'The number under which the supplier is registered at the chamber of commerce'
        type: string
        example: '30280353'
        maxLength: 255
      logo:
        description: 'The logo for this supplier'
        type: string
        example: 'https://www.my-organization.com/logo.png'
        format: url
        maxLength: 255
    required:
      - name
      - kvk
  Tax-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      offers:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
  Tax-write:
    properties:
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      offers:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
tags:
  -
    name: Catalogue
    description: |
      An entity representing a product catalogue.
      
      This entity represents a product catalogue that contains all products that can be ordered in a single point.
  -
    name: CustomerType
    description: |
      An entity representing a type of customer.
      
      This entity represents a type of customer that can order offers in the OrderRegistratieComponent. This entity is linked from offer with the variable eligibleCustomerType.
  -
    name: Group
    description: |
      An entity representing a product group.
      
      This entity represents a product group to differ between various product types.
  -
    name: Offer
    description: |
      An entity representing an offer.
      
      This entity represents an offer that bridges products to the OrderRegistratieComponent to be able to change prices without invalidating past orders.
  -
    name: Product
    description: |
      An entity representing a product.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: PropertyValue
    description: |
      An entity representing a product property.
      
      This entity represents a product property that can be used to filter products.
  -
    name: Supplier
    description: |
      An entity representing a supplier of products.
      
      This entity represents a supplier that delivers products to the seller. For example: if we are a municipality we sell passports to our inhabitants, but these passports are made by the ministry of internal affairs.
  -
    name: Tax
    description: |
      An entity representing an tax.
      
      This entity represents an offer that bridges products to the OrderRegistratieComponent to be able to change prices without invalidating past orders.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Tax resource'
      write: 'write right to the Tax resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Tax resource'
      write: 'write right to the Tax resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://pdc.zaakonline.nl'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://pdc.zaakonline.nl'
  -
    description: Repository
    url: 'https://github.com/ConductionNL/productenendienstencatalogus'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
