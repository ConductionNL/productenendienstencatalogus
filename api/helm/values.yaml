# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

settings:
  registryBase: docker.io/conduction
  projectName: pdc
  name: pdc
  title: Producten en Diensten Catalogus
  version: V.0.1
  id: 
  description: '&#039;This component provides a products and services catalogue that can be used by a order component in order to provide the products in the orders with better details. The design considerations are given in [DESIGN.md](https://github.com/ConductionNL/productenendienstencatalogus/blob/master/DESIGN.md) and [DESIGN-PDC.md](https://github.com/ConductionNL/productenendienstencatalogus/blob/master/DESIGN-PDC.md)&#039;'
  type: component
  repro: https://github.com/ConductionNL/productenendienstencatalogus
  demo: pc.zaakonline.nl
  container: https://hub.docker.com/repository/docker/conduction/pdc-php
  domain: zuid-drecht.nl
  subdomain: pdc
  organisationName: Conduction
  email: info@conduction.nl
  country: Netherlands
  state: Noord-Holland
  locality: Amsterdam
  unit: Common-Ground
  env: dev
  web: false
  debug: 1
  cache: 1
  replicaCount: 1
  corsAllowOrigin: ['*']
  trustedHosts: '^.+$'
  pullPolicy: Always
  # You will need these proxies on kubernetes
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  # If you are runnig a single component on a kubernetes cluster you can just easaliy enable the load balancer, if not you need to set up a multi component load balancer
  loadbalancerEnabled: false
  # If you want to enable NLX you are requered to add the appropreate certificates to you nlx-settings folder (located in the /api folder)
  nlxInwayEnabled: false
  # If you are runnig a single component on a kubernetes cluster you can just easaliy enable the load balancer, if not you need to set up a multi component load balancer
  notificationEnabled: false
  audittrailEnabled: false
  authorisationEnabled: false
  healthEnabled: false
  archiveEnabled: false

security:
  applicationKey: "45c1a4b6-59d3-4a6e-86bf-88a872f35845"
  secret: ""
  jwt:
    id:
    privateKey:

php:
  repository: docker.io/conduction/protocomponent-php
  image: ghcr.io/conductionnl/productenendienstencatalogus-php
  tag: latest
  env: prod
  replicaCount: 2
  pullPolicy: Always
  trustedHosts: '^.+$'
  corsAllowOrigin: ['*']
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16

redis:
  cluster:
    enabled: false
  redisPort: 6379
  usePassword: false
  enabled: false
  pullPolicy: IfNotPresent

nginx:
  repository: docker.io/conduction/protocomponent-nginx
  image: ghcr.io/conductionnl/productenendienstencatalogus-nginx
  tag: latest
  pullPolicy: Always
  replicaCount: 2

postgresql:
  enabled: true
  imageTag: 10-alpine
  # If bringing your own PostgreSQL, the full uri to use
  url: "psql://a:b@example.com/c"
  postgresqlUsername: "example"
  postgresqlPassword: "!ChangeMe!"
  postgresqlDatabase: "api"
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: true
  pullPolicy: IfNotPresent

ingress:
  enabled: false
  hostname: .local
  path: /
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: chart-ip
    # kubernetes.io/ingress.class: gce
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace, you can also use cert-manager.
    # - hosts:
    # - example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
